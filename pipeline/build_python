pipeline {
    agent any
    
    environment {
        DOCKER_HUB_REPO = "raorajath/flask-hello-world"
        CONTAINER_NAME = "flask-hello-world"
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-credentials')
        GIT_CREDENTIALS = credentials('rajath-my-git-pat')
        GIT_BRANCH = 'test_python'
        GIT_URL = 'https://github.com/rajath-optit/flask-hello-world-devops-project.git'
    }
    
    stages {
        stage('Git Checkout') {
            steps {
                echo 'Checking out Git repository...'
                script {
                    git branch: GIT_BRANCH, credentialsId: GIT_CREDENTIALS, url: GIT_URL
                }
            }
        }

        stage('Cleanup') {
            steps {
                echo 'Cleaning up old containers and images..'
                sh 'docker stop $CONTAINER_NAME || true'
                sh 'docker rm $CONTAINER_NAME || true'
                sh 'docker rmi -f $(docker images -q) || true'
            }
        }

        stage('Build') {
            steps {
                echo 'Building Docker image..'
                sh 'docker image build -t $DOCKER_HUB_REPO:latest .'
            }
        }
        
        stage('Test') {
            steps {
                echo 'Testing..'
                sh 'docker stop $CONTAINER_NAME || true'
                sh 'docker rm $CONTAINER_NAME || true'
                sh 'docker run --name $CONTAINER_NAME $DOCKER_HUB_REPO /bin/bash -c "pytest test.py && flake8"'
            }
        }
        
        stage('Push') {
            steps {
                echo 'Pushing image with pythonlatest tag..'
                withCredentials([usernamePassword(credentialsId: DOCKERHUB_CREDENTIALS, passwordVariable: 'DOCKERHUB_CREDENTIALS_PSW', usernameVariable: 'DOCKERHUB_CREDENTIALS_USR')]) {
                    sh 'docker login -u $DOCKERHUB_CREDENTIALS_USR -p $DOCKERHUB_CREDENTIALS_PSW'
                    sh 'docker tag $DOCKER_HUB_REPO:latest $DOCKER_HUB_REPO:pythonlatest'
                    sh 'docker push $DOCKER_HUB_REPO:pythonlatest'
                }
            }
        }
        
        stage('Final Cleanup') {
            steps {
                echo 'Final cleanup..'
                sh 'docker system prune -af --volumes'
            }
        }
    }
}
