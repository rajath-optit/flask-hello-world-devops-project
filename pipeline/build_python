pipeline {
    agent any
    
    environment {
        DOCKER_IMAGE_NAME = 'raorajath/flask-hello-world'
        DOCKER_IMAGE_TAG = 'pythonlatest'
    }

    stages {
        stage('Git Checkout') { 
            steps { 
                script { 
                    git branch: 'test_python', 
                        credentialsId: 'rajath-my-git-pat',
                        url: 'https://github.com/rajath-optit/flask-hello-world-devops-project.git'
                    echo "Added git"
                }
            } 
        }

        stage('Build') {
            steps {
                echo 'Building Docker image..'
                sh 'docker image build -t $DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG .'
            }
        }
        
        stage('Test') {
            steps {
                echo 'Testing..'
                sh 'docker stop flask-hello-world || true'
                sh 'docker rm flask-hello-world || true'
                sh 'docker run --name flask-hello-world $DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG /bin/bash -c "pytest test.py && flake8"'
            }
        }

        stage('Push') {
            steps {
                sh "docker tag $DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG $DOCKER_IMAGE_NAME:latest"
                sh "docker push $DOCKER_IMAGE_NAME:latest"
            }
        }

        stage('Docker Run') {
            steps {
            script {
            echo 'Running Docker container...'
            sh "docker run -p 8181:80 -d $DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG"
            }
        }
    }
        stage('Final Cleanup') {
            steps {
                echo 'Final cleanup..'
                sh 'docker system prune -af --volumes'
            }
        }

        stage('Docker Publish') {
            steps {
                script {
                    echo 'Publishing Docker image...'
                    sh "docker push $DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG"
                }
            }
        }

        stage('Docker Pull') {
            steps {
                script {
                    echo 'Pulling Docker image...'
                    sh "docker pull $DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG"
                }
            }
        }
    }
}
